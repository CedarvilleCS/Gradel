{% block head %}
<title>Gradel</title>
<link rel="icon" type="image/x-icon" href="{{ asset('logo1.png') }}" />
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
{% endblock %}

{% block body %}
<body>
  {{ include('template/top-nav.html.twig') }}


  {# Left Nav #}
  <nav class="nav-left">
      <div class="btn btn-center" id="add-test">Add Test Case</div>
      <div class="btn btn-center" id="save-btn">Save</div>
  </nav>

  {{ include('template/path-nav.html.twig') }}

  {# Main section #}
  <section id="main">

    {# Cards #}
	<div class="parallel-cards">
		<div class="card" style="flex-grow:3">
		
			<div class="btn-close">
				<h2 style="margin: 0px">
				{% if problem is not null %}
					Edit {{problem.name}}
				{% else %}
					New Problem
				{% endif %}
				</h2>
			</div>
		
		<div id="requiredFields" class="card-contents">				
			<div>
				<table>
					<tr>
					  <th colspan="4">
						<label for="name">Name</label>
						<input id="name" name="name" type="text" value="{{problem.name}}">
					  </th>
					</tr>
					<tr>
					  <th colspan="4">
						<label for="description">Description</label>
						<textarea rows=20 id="description" name="description" class="problem_creation" type="text">{{problem.deblobinateDescription}}</textarea>
						
						
					  </th>
					</tr>
					<tr>
					  <th colspan="1">
						 
						<div id="language-container">
							<label> Used </label>
							<div id="language-list">
							{% if problem is not null %}						
								{% for l in problem.problem_languages %}
									<div id="{{l.language.name}}" name="{{l.language.id}}" class="language">{{l.language.name}}</div>
								{% endfor %}
							{% else %}
								{% for l in languages %}
									<div id="{{l.name}}" name="{{l.id}}" class="language">{{l.name}}</div>
								{% endfor %}
							{% endif %}
							</div>
							
							<label> Unused </label>
							<div id="language-pool">
								{# add all the languages not currently used by the problem to this pool #}
								{% if problem is not null %}
								
									{% for l in languages %}
									
										{% set not_found = true %}
										{% for pl in problem.problem_languages %}
										
											{% if pl.language == l %}
												{% set not_found = false %}
											{% endif %}
										
											{% if loop.last and not_found %}												
												<div id="{{l.name}}" name="{{l.id}}" class="language">{{l.name}}</div>
											{% endif%}
										
										{% endfor %}
									{% endfor %}
								{% endif %}
							</div>
						</div>
					  </th>					 
					</tr>
					<tr>
					  <th colspan="1">
					  	  <label for="weight">Weight</label>
						  <input id="weight" name="weight" type="text" style="width: 100px" value="{{(problem) ? problem.weight : 1}}">
					  
						  <label for="time_limit">Time Limit (ms)</label>
						  <input type="text" id="time_limit" style="width: 100px" value="{{(problem) ? problem.time_limit: 1000}}">
					  
					  </th>
					  
				  </table>
				</div>
			</div>
		</div>
		
		
		<div class="serial-cards" style="width: 30%">
			<div class="card">
				<div class="btn-close">
					<h2 style="margin: 0px">
						Grading Options
					</h2>
				</div>
				
				<div id="optional-grading" class="card-contents">
					<table>
						<tr> <th>
							<label for="total_attempts">Total Attempts</label>
							<input id="total_attempts" name="total_attempts" type="text" value="{{(problem) ? problem.total_attempts : 0}}">
						  
							<label for="pen_attempts">Attempts Before Penalty</label>
							<input id="pen_attempts" name="pen_attempts" type="text" value="{{ (problem) ? problem.attempts_before_penalty : 0}}">
						  
							<label for="penalty">Penalty Per Attempt</label>
							<input id="penalty" name="penalty" type="text" value="{{ (problem) ? problem.penalty_per_attempt : 0.00}}">
							
							
							<div id="extra-credit-container" class="toggle-container">
								<label for="extra-credit">Extra Credit</label>
								<label class="switch">
									<input id="extra-credit" type="checkbox" name="extra-credit" {{(problem) ? (problem.is_extra_credit) ? "checked" : "" : "checked" }}>
									<span class="slider round"></span>
								</label>
							</div>
						</th> </tr>
					</table>
				</div>
			</div>
			
			<div class="card">
				<div class="btn-close">
					<h2 style="margin: 0px">
						Submission Feedback Options
					</h2>
				</div>
				
				<div id="optional-feedback" class="card-contents">
					<table>
						<tr> <th>
							<label for="">Helpful Tips/Feedback Level</label>
							<select id="response-level">
								<option {{(problem.response_level == "None") ? "selected" : ""}} value="None">None</option>
								<option {{(problem.response_level == "Short") ? "selected" : ""}} value="Short">Short Response</option>
								<option {{(problem) ? (problem.response_level == "Long") ? "selected" : "" : "selected"}} value="Long">Long Response</option>
							</select>
							
							<div id="display-testcase-container" class="toggle-container">
								<label for="display-testcase">Testcase Results</label>
								<label class="switch">
									<input id="display-testcase" type="checkbox" name="display-testcase" {{(problem) ? (problem.display_testcaseresults) ? "checked" : "" : "checked" }}>
									<span class="slider round"></span>
								</label>
							</div>
							
							<div id="output-level-container">
								<label for="output-level">Testcase Content Output Level</label>
								<select id="output-level">
									<option {{(problem.testcase_output_level == "None") ? "selected" : ""}} value="None">None</option>
									<option {{(problem.testcase_output_level == "Output") ? "selected" : ""}} value="Output">Expected Testcase Output</option>
									<option {{(problem) ? (problem.testcase_output_level == "Both") ? "selected" : "" : "selected"}} value="Both">Expected Testcase Output and Testcase Input</option>
								</select>
							</div>
							
							<div id="stop-fail-container" class="toggle-container">
								<label for="stop-fail">Stop On First Failed Testcase</label>
								<label class="switch">
									<input id="stop-fail" type="checkbox" name="stop-fail" {{(problem.stop_on_first_fail) ? "checked" : ""}}>
									<span class="slider round"></span>
								</label>
							</div>
							
							
							<div id="display-extra-container" class="toggle-container">
								<label for="display-extra">Display Extra Credit Testcases </label>
								<label class="switch">
									<input id="display-extra" type="checkbox" name="display-extra" {{(problem) ? (problem.extra_testcases_display) ? "checked" : "" : "checked"}}>
									<span class="slider round"></span>
								</label>
							</div>
					  
						</th> </tr>
					</table>
				</div>
			</div>

		</div>
	</div>
	
	
	<div id="testcase-cards" class="parallel-cards">
	
	
	</div>
	
  </section>
</body>
{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('styles.css') }}" />
    <link rel="stylesheet" href="{{ asset('card.css') }}" />
    <link rel="stylesheet" href="{{ asset('problem-creation.css') }}" />
    <link rel="stylesheet" href="{{ asset('custom-toggle.css') }}" />
	
	<style type="text/css">
		.testCardAdder:hover {
			background: url("{{asset('testcase-blur-grbg.png')}}") no-repeat;
		}
	</style>
{% endblock %}

{% block scripts %}
  <!-- JQuery -->
  <script src="http://malsup.github.com/jquery.form.js"></script>
  <script src="{{ asset('js/cards.js') }}"></script>
  

  <script>
    var languages = [];
	testCases = 0;
    currentNum = 0;
    currentFieldId = "";
    uploadFormId = "";

    $(document).ready(() => {
	
		$('#save-btn').click( function() {
		
			/* Client-Side Validation */
		
		
			/* Post the Problem */
			newProb();		
		
		});
		
		$('#display-testcase').change( function() {
			
			if($(this).is(':checked') ){
				$('#output-level-container').show();
			} else{
				$('#output-level-container').hide();
			}
			
		});
		
		$('.language').click( function() {
		
			if($(this).parent().attr('id') == "language-list"){
				$('#language-pool').append($(this));
			} else {
				$('#language-list').append($(this));
			}
		
		
		});
		
		
		$('#display-testcase').change();
	
		{# add in the testcases #}
		{% if (problem.testcases) %}
			{% for tc in problem.testcases %}
				addTestCase(
					"{{tc.deblobinateInput|replace({'\n': '\\n'})}}",
					"{{tc.deblobinateCorrectOutput|replace({'\n': '\\n'})}}",
					"{{tc.weight}}",
					"{{tc.is_extra_credit}}",
					"{{tc.feedback.deblobinateShortResponse|replace({'\n': '\\n'})}}",
					"{{tc.feedback.deblobinateLongResponse|replace({'\n': '\\n'})}}",
				);
			{% endfor %}
		{% else %}	  
			/* default to at least one testcase */
			addTestCase();	  
      {% endif %}
    });


    function addTestCase(input, output, weight, extraCredit, short, long) {
		
		currentNum++;
		testCases++;
		div_name ="testcases"+testCases;
		formalName="Test Case "+testCases;
		newTestCard = `<div class="card testcase-card" id=`+div_name+`>
			<div class="btn-close">
				<h2 style="margin: 0px">`+formalName+`<span style="float: right"><i class="fa fa-angle-down"></i></span></h2>
				<object>
						<a title="Delete assignment" id="closeButton" onclick="deleteTestCase(&quot;`+div_name+`&quot;)")}}">
							<img class="test_case_delete" id="right-icon" src="{{ asset('trash.png') }}">
						</a>
				</object>
			</div>
			<div id=`+div_name+` class="test-case">
			<table>
				<tr>
				<th colspan="1">
					<form id="inputUpload`+ currentNum + `" method="post" action="{{path("get_contents")}}">
						<label for="input">Input</label>
						<input class="file" id="file" name="file" type="file" value="">
						<textarea rows="5" id="input` + currentNum +`" class="input problem_creation" type="text" value="">` + (input ? input : "") + `</textarea>
					</form>
					</th>
					
				<th colspan="1">
					<form id="outputUpload` + currentNum + `"  method="post" action="{{path("get_contents")}}">
						<label for="output">Output</label>
						<input class="file" id="file" name="file" type="file" value="">
						<textarea rows="5" id="output` + currentNum + `" class="output problem_creation" type="text" value="">` + (output ? output : "") + `</textarea>
					</form>
				</th>
				
				</tr>
				
				<tr> <th colspan="2">
				
				<div style="display: flex; flex-direction: row; justify-content: space-between; margin-bottom: 10px">
					
					<div style="display: flex; flex-direction: column; justify-content: space-between">
						
						<span>
							<label for="weight">Weight</label><br/>
							<input id="weight" name="weight" class="weight" style="width: 100px" type="text" value="` + (weight ? weight : "1") + `">
						</span>
						
						<label for="extra-credit">Extra Credit</label>
						<div id="extra-credit" class="toggle-container">
							<br/><label class="switch">
								<input class="extra-credit" type="checkbox" name="extra-credit"` + (extraCredit ? 'checked' : '') + `>
								<span class="slider round"></span>
							</label>
						</div>
					</div>
					<div style="width: 75%">
						
						<form id="shortFeedbackUpload` + currentNum + `" method="post" action="{{path("get_contents")}}">
							<label for="shortFeedback">Short Feedback</label>
							<input class="file" id="file" name="file" type="file" value="">
							<input id="shortFeedback` + currentNum + `" class="shortFeedback problem_creation" type="text" value="` + (short ? short : "") + `">
						</form>
														
								
						<form id="longFeedbackUpload` + currentNum + `" method="post" action="{{path("get_contents")}}">
							<label for="longFeedback">Long Feedback</label>
							<input class="file" id="file" name="file" type="file" value="">
							<input id="longFeedback` + currentNum + `" class="longFeedback problem_creation" type="text" value="` + (long ? long : "") + `">
						</form>	
					</div>
				</div>			
				
				</th>
				</tr>
			</table>
			</div>
		</div>`;
		
		$("#testcase-cards").append(newTestCard);
		
		$('.testCardAdder').remove();
		var addTestCardButton = $(document.createElement('div'));
		addTestCardButton.addClass('testcase-card');
		addTestCardButton.addClass('card');
		addTestCardButton.addClass('testCardAdder');
		addTestCardButton.append('<img id="add-button" src="{{asset('big_add_circle.png')}}">');
		
		addTestCardButton.click(function() {
			addTestCase();
		});
		
		
		$("#testcase-cards").append(addTestCardButton);
		
		
		$('.file').change(function(data) {
			currentFieldId = $(this).siblings("textarea, input")[0].id;
			uploadFormId = "#" + currentFieldId.substring(0, currentFieldId.length - 1) + "Upload" + currentNum;
			$(uploadFormId).ajaxForm(function(data) {
				changeVar = "";
				changeVar = atob(data.contents);
				element = document.getElementById(currentFieldId);
				element.value = changeVar;
			});

			$(uploadFormId).submit(function(e) {
			  e.preventDefault();
			  $(this).ajaxSubmit();
			});
			
			$(uploadFormId).submit();
		});
    }

		$("#add-test").click(function(input, output, weight, extraCredit, short, long) {
      addTestCase();
		});

	function deleteTestCase(testcase){
		
		if(testCases > 1){
			testCases--;
			document.getElementById(testcase).remove();
		} else {
			alert("You must have at least one testcase!");
		}

	};

    function languageSelect() {
      const language = document.getElementById('languages');

      // languages.push(language.value);
      $('#language-list').append("<div class='language' name=" + language.value + ">" + language.options[language.selectedIndex].label + "</div>");
      language.selectedIndex = 0;
    }
	
	function newProb(){
		const name = document.getElementById('name').value;
		const description = document.getElementById('description').value;
		const weight = document.getElementById('weight').value;
		const timeLimit = document.getElementById('time_limit').value;
		const extraCredit = document.getElementById('extra-credit').checked;
		const totalAttempts = document.getElementById('total_attempts').value;
		const attemptsBeforePen = document.getElementById('pen_attempts').value;
		const penPerAttempt = document.getElementById('penalty').value;
		const stopFail = document.getElementById('stop-fail').checked;
		const responseLevel = document.getElementById('response-level').value;
		const outputLevel = document.getElementById('output-level').value;
		const displayTestcase = document.getElementById('display-testcase').checked;
		const extraDisplay = document.getElementById('display-extra').checked;

		const children = $("#language-list .language");
		languages = [];
		for (var i = 0; i < children.length; i++) {
			languages.push(children.eq(i).attr('name'));
		}


		/* build the testcase array */
		var testcases = document.getElementsByClassName("test-case");
		tcs = [];
		for (testcase of testcases) {
			const input = $("#"+testcase.id).find("."+"input").val();
			const output = $("#"+testcase.id).find("." + "output").val();
			const short_fb = $("#"+testcase.id).find("."+"shortFeedback").val();
			const long_fb = $('#'+testcase.id).find("." + "longFeedback").val();
			const weight = $('#' + testcase.id).find("." + "weight").val();
			const extra_credit = $('#' + testcase.id).find("." + "extra-credit").prop("checked");
			const tc = {"input": input, "output": output, "weight": weight, "short_response": short_fb, "long_response": long_fb, "extra_credit": extra_credit ? "true" : "false"};
			tcs.push(tc);
		}
		
		console.log(tcs);
	  
	  
		var path = "{{path('problem_modify')}}";
		$.post(path, {
			"assignmentId": {{(problem ? problem.assignment.id : assignment.id)}},
			"problem": {{(problem ? problem.id : 0)}},
			"name": name,
			"description": description,
			"time_limit": timeLimit,
			"weight": weight,
			"languages": languages,
			// "grading_method": gm,
			"is_extra_credit": extraCredit,

			"total_attempts": totalAttempts, // must be a non-negative integer - 0 means unlimited
			"attempts_before_penalty": attemptsBeforePen, // must be less than totalAttempts
			"penalty_per_attempt": penPerAttempt, // decimal between 0.00 and 1.00


			"stop_on_first_fail": stopFail ? "true" : "false", // checkbox
			"response_level": responseLevel, // dropdown with [None, Short, Long]
			"display_testcaseresults": displayTestcase ? "true" : "false", // checkbox
			"testcase_output_level": outputLevel, // dropdown with [None, Output, Both]
			"extra_testcases_display": extraDisplay ? "true" : "false", // checkbox

			"testcases": tcs, // array of objects - see tcs for the fields

		}, (data) => {
			console.log(data);
		
			window.location = data['redirect_url'];
		
		}, "json")
		.fail(function(data) {
			alert(data['responseText']);
		});
    }
	</script>
{% endblock %}
