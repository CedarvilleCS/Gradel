{% set teaching=grader.isTeaching(app.user, problem.assignment.section) or is_granted("ROLE_SUPER") or is_granted("ROLE_ADMIN") %}


{% block head %}
	<title>Gradel {% if problem != null %} | {{problem.assignment.name}} {% endif %}</title>
	<link rel="icon" type="image/x-icon" href="{{ asset('logo.png') }}" />
{% endblock %}

{% block stylesheets %}
	<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
	
    <link rel="stylesheet" href="{{ asset('styles.css') }}" />
    <link rel="stylesheet" href="{{ asset('card.css') }}" />
	
	<link rel="stylesheet" href="{{ asset('submit.css') }}" />
	{# <link rel="stylesheet" href="{{ asset('submission-results.css') }}"> #}
	
	<link rel="stylesheet" href="{{ asset('markdown-styles.css') }}" />


	<style>
		#submissionButton:hover {
			cursor:pointer;
		}
	</style>
{% endblock %}

{% block body %}

<body>
    {{ include('template/top-nav.html.twig') }}

	{# left panel with the problem links #}
	{{ include('template/problem-nav.html.twig') }}

	{{ include('template/path-nav.html.twig') }}
	
    <section id="main">

		{% if problem.assignment.problems|length == 0 %}

		{% else %}

		<div class="card" style="padding-top: 2px">
			{% set grade = grader.getProblemGrade(app.user, problem) %}
			{% if not teaching %}
			
				{% if grade['total_testcases'] + grade['total_extra_testcases'] == grade['passed_testcases'] + grade['passed_extra_testcases'] %}
					<h3 style="color: green"> You have completed this problem! </h3>
				{% elseif grade['total_testcases'] == grade['passed_testcases'] %}
					<h3> Your solution has solved the normal testcases, but not the extra credit ones </h3>
				{% endif %}
				
				<h3>
					{% if attempts_remaining < 0 %}
						Unlimited attempts allowed
					{% else %}
						Attempts left: {{attempts_remaining}}
					{% endif %}


					{% if best_submission != null %}
						<a href="{{path('problem_result', {'submission_id': best_submission.id})}}"> [Currently accepted submission] </a>
					{% endif %}
				</h3>
			
			{% endif %}
			
			<div id="courseInfo" class="card-contents">
			
				<div class="markdown-container">
					<div id="markdown-header"><h1>{{problem.name}}</h1></div>
					<div id="markdown"></div>
					<div id="markdown-collapser">Hide Description</div>
				</div>
				

{# the ACE editor text area #}

<div id="add-file-button"> Add File </div>
<div id="file-markers">
	<ul>
	</ul>
</div>

<div id="editor">{% if trial != null and trial.filename|split('.')|last != 'zip' %}
{{ trial.deblobinateFile()|nl2br }}{% elseif trial != null %}
Uploaded file was a ZIP file<br>
We are not able to repopulate zip files at this time.<br>
Please re-upload it!
{% endif %}
</div>
		<div id="trial-status" style="font-style: italic; font-size:0.8em; color: grey;">&nbsp;</div> 
				

				<br/>

				{# display the form or not #}
				{% set open = (problem.assignment.start_time|date('U') < "now"|date('U') and problem.assignment.cutoff_time|date('U') > "now"|date('U')) %}

				{% if teaching or (usersectionrole.role.role_name == 'Takes' and open and attempts_remaining != 0)%}

					{# file upload#}
					<form id="submissionUploadForm" action="{{path('get_contents')}}" method="post">
						<input type="file" name="file" id="file" value="Upload File">
					</form>

					{# Language selection and hidden field to submit ACE contents #}
					<div id="submissionForm">

						Language:
						<select id="languageSelect" name="language">
							{% for lang in languages %}
								{% if lang.name != "No Language Restriction" %}
									<option value={{lang.id}}>{{lang.name}}</option>
								{% endif %}
							{% endfor %}
						</select>
						<br>
						<div id="mainClassInput" style="display:none"><label for="main_class">Main Class: </label><input type="text" name="main_class" id="main_class_input"></div>
						<div id="packgNameInput" style="display:none"><label for="package_name">Package Name: </label><input type="text" name="package_name" id="package_name_input"></div>
						<br/>
						<input type="hidden" name="ACE" id="ACE">
						<div class="btn" style="width: 100px" id="submissionButton"> Submit </div>
						<div id="loading-container" style="display: none">
							<img id="loadingGif" style="height: 60px" src="{{asset('beoload.gif')}}" alt="Loading..."/>
							<h3 style="margin: 0px"> Submitting Code... </h3>
						</div>
					</div>

				{% elseif attempts_remaining == 0 %}
					You are out of attempts for this problem.
				{% elseif open %}
					You are not allowed to submit for this problem.
				{% else %}
					This problem is not currently open.
				{% endif %}
			</div>
		</div>
		
		{% if all_submissions|length > 0 %}
		<div class="card">
			<div class="btn-close" onclick="collapseCard('recentSubs')">
				<h2 style="margin: 0px">Your {% if team.users|length > 1 %} Team's {% endif %} Recent Submissions</h2>
			</div>
			
			<div id="recentSubs" class="card-contents" style="margin-top: 0px">
				<div>   
					<ul>
					{% if all_submissions|length == 0 %}
						<li> No recent submissions </li>
					{% else %}
						
						{% for sub in all_submissions %}
							{% if sub.isCorrect %}
								<div style="color: green">
							{% else %}
								
								<div style="color: red">
							{% endif %}
							
							<li><a href="{{path('problem_result', {'submission_id': sub.id})}}">
								[{{sub.problem.name}}] 
									{% if sub.team.users|length > 1 %}
										{
										{% for user in sub.team.users %}
											
											{{user.getLastName}}
											{% if not loop.last %}
											, 
											{% endif%}
										{% endfor %}
										}
									{% endif %}
									- {{sub.timestamp|date('F d, Y  \\a\\t  h:i:s')}} ({{sub.language.name}})
							</a> </li>
						
							</div>
						{% endfor %}
						
					{% endif %}
					
					</ul>
				</div>
			</div>
		</div>
		{% endif %}

		{% endif %}

		
		
    </section>
</body>
{% endblock %}

{% block scripts %}
    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="{{ asset('js/unicode_return.js') }}" type="text/javascript" charset="utf-8"></script>
	<script src="{{ asset('src-noconflict/ace.js') }}" type="text/javascript" charset="utf-8"></script>
	<script src="{{ asset('js/validation.js') }}"></script>
		
	{# asynchronous file upload #}
	<script src="http://malsup.github.com/jquery.form.js"></script>

	{# markdown #}
<script src="http://cdn.rawgit.com/showdownjs/showdown/1.8.6/dist/showdown.min.js"></script>

<script>

// markdown stuff
var converter = new showdown.Converter();
converter.setOption('tasklists', true);
converter.setOption('backslashEscapesHTMLTags', true);
converter.setOption('emoji', true);

converter.setFlavor('github');
var markdownText = converter.makeHtml("{{problem.description|e('js')}}");

// ACE Session
var editor = ace.edit("editor");
var EditSession = ace.require("ace/edit_session").EditSession;
var ace_sessions = [];
ace_sessions[0] = new EditSession("session 0");
{# editor.setSession(ace_sessions[0]); #}
{# editor.setValue #}
ace_sessions[1] = new EditSession("session 1");
{# var js = new EditSession("some js code");
var css = new EditSession(["some", "css", "code here"]); #}
// and then to load document into editor, just call
// editor.setSession(js);
// editor.setSession(ace_sessions[1]);
editor.$blockScrolling = Infinity;

editor.getSession().on('change', function() {	

	second++;
	if(second > 1){
		$('#trial-status').text("Unsaved changes...");
	}
	
	clearInterval(trialUpdateTimer);
	trialUpdateTimer = setInterval(updateTrial, 5000);		
});

editor.commands.addCommand({
	name: "replace",
	bindKey: {win: "Ctrl-S", mac: "Command-S"},
	exec: function(editor) {
		updateTrial();
	}
});

// set default stuff for the ace editor
var editor = ace.edit("editor");
editor.$blockScrolling = Infinity;
editor.setTheme("ace/theme/xcode");

editor.setSession(ace_sessions[0]);


$(document).ready( function() {
	$('#file-markers').tabs();	
	
	$('.file-data textarea').each(function () {
		
		$(this).html(addReturnKey($(this).html()));
		
	});
});

		
// file tabs
$('#add-file-button').button().click(function() {

	var num_tabs = $("div#file-markers ul li").length + 1;

	$("div#file-markers ul").append(
		"<li class='tabs' id='test-code-tab-user-" + num_tabs + "-marker' onclick='editor.setSession(ace_sessions[" + num_tabs + "]);'><a href='#test-code-tab-user-" + num_tabs + "'>#" + num_tabs + "</a>"
			+ '<input type="hidden" name="ACE" id="ACE' + num_tabs + '">'
			+ "</li>"
	);

	ace_sessions[num_tabs] = new EditSession("");
	editor.setSession(ace_sessions[num_tabs]);
	editor.setTheme("ace/theme/xcode");
	updateAceCode();
	setDefaultCode();
}); 

$('#file-markers').tabs();
var tabCount = $('#file-markers >ul >li').length;


if(tabCount < 1){
	$('#add-file-button').click();
	$( "#file-markers" ).tabs({ active: 0 });
}

		var saved_code = "";

		function getLanguage(filename){

			var filetypes = JSON.parse('{{ filetypes|json_encode|raw }}');
			var ext = getExtension(filename);

			return filetypes[ext];
		}

		function getExtension(filename){

			var ext = filename.substr(filename.lastIndexOf('.') + 1);
			return ext;
		}

		function getName(filename){

			var ext = getExtension(filename);
			var cls = filename.substr(filename.lastIndexOf('\\') + 1).replace("."+ext,"");
			
			return cls;
		}

		function setLanguageFromFilename(filename){

			var classname = getName(filename);
			var ext = getExtension(filename);
			var language = getLanguage(filename);

			if(!language){
				language = $('#languageSelect option:selected').text();
			}

			setLanguage(language);

			// set the main class
			document.getElementById('main_class_input').value = classname;

			// toggle the java inputs
			toggleJavaInputs(language == "Java", ext == "zip");
		}

		function setLanguage(language){

			// set the language selector
			var selectObject = document.getElementById('languageSelect');
			for(var i=0; i<selectObject.length; i++){
				if(selectObject.options[i].text == language){
					selectObject.selectedIndex = i;
					break;
				}
			}

			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;
			updateAceCode();

			// toggle the java inputs
			var ext = getExtension($('#submissionUploadForm #file').val());
			toggleJavaInputs(language == "Java", ext == "zip");
		}

		function toggleJavaInputs(state1, state2){

			if(!state1){
				document.getElementById('mainClassInput').style.display = 'none';
				document.getElementById('packgNameInput').style.display = 'none';
			} else if(state1 && !state2){
				document.getElementById('mainClassInput').style.display = 'block';
				document.getElementById('packgNameInput').style.display = 'none';
			} else{
				document.getElementById('mainClassInput').style.display = 'block';
				document.getElementById('packgNameInput').style.display = 'block';
			}
		}

		function updateAceCode(){

			console.log("--------------\nupdaceAceCode(): ");

			var default_code = JSON.parse('{{ default_code|json_encode|replace({'\\':'\\\\'})|raw }}');
			var ace_modes = JSON.parse('{{ ace_modes|json_encode|raw }}');
			
			editor.$blockScrolling = Infinity;
			
			language = $('#languageSelect option:selected').text();
			console.log("language: " + language);
			
			if(saved_code !== editor.getValue()) {
				editor.setValue(editor.getValue(), -1);
				console.log("setValue");
			} else {
				// This sets the default code for the selected language.
				editor.setValue(default_code[language], -1);
				saved_code = default_code[language];
				console.log("setting to default code");
			}
			
			editor.getSession().setMode("ace/mode/" + ace_modes[language]);

			console.log("ace updated");
			
		}

		// sets the default code for the selected language. used when adding a new file tab.
		function setDefaultCode() {
			var default_code = JSON.parse('{{ default_code|json_encode|replace({'\\':'\\\\'})|raw }}');
			var ace_modes = JSON.parse('{{ ace_modes|json_encode|raw }}');
			language = $('#languageSelect option:selected').text();
			editor.setValue(default_code[language], -1);
			saved_code = default_code[language];
			console.log("setting to default code");
			editor.getSession().setMode("ace/mode/" + ace_modes[language]);
		}

	</script>

	<script>
	
		var trialUpdateTimer = null;
		var trialId = {{(trial) ? trial.id : "0"}};
		var second = 0;
		
		$("#markdown-collapser").click(function () {
			
			$collapser = $(this);
			$content = $('#markdown');
						
			$collapser.text(function() {
				return $content.is(":visible") ? "Show Description" : "Hide Description";
			});
			
			$content.slideToggle(20, function() {});
			
			updateTrial();
			
		});
	
		$(document).ready(function() {
			
			$('#markdown').html(markdownText);
			
			// update key bindings
			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;
			
			editor.getSession().on('change', function() {	

				second++;
				if(second > 1){
					$('#trial-status').text("Unsaved changes...");
				}
				
				clearInterval(trialUpdateTimer);
				trialUpdateTimer = setInterval(updateTrial, 5000);		
			});

			editor.commands.addCommand({
				name: "replace",
				bindKey: {win: "Ctrl-S", mac: "Command-S"},
				exec: function(editor) {
					updateTrial();
				}
			});
			
			
			// set default stuff for the ace editor
			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;
			editor.setTheme("ace/theme/xcode");
			
			{% if trial != null %}
			setLanguageFromFilename("{{trial.filename}}");
			
			{% if not trial.show_description %}
			$("#markdown-collapser").click();
			{% endif %}
			
			{% else %}
			$('#languageSelect').change();			
			{% endif %}
			
			
			if(trialId == 0){
				updateTrial();
			}
		});
		
		
		// make the language dropdown change affect the code
		$('#languageSelect').change( function(data) {

			var language = $('#languageSelect option:selected').text();
			setLanguage(language);
		});

		// submit the form if the file upload is changed
		$('#submissionUploadForm #file').change( function(data) {
			$('#submissionUploadForm').submit();
		});

		// overwrite the normal submit to call the ajaxsubmit
		$('#submissionUploadForm').submit(function() {
			
			$(this).ajaxSubmit({
			
				beforeSubmit: 	function(formData, jqForm, options){
					
					/* CLIENT-SIDE VALIDATION MAY HAPPEN HERE */
					return true;
					
				},
				success:		function(responseText, statusText, xhr, $form) {
					
					var file = responseText['files'][0];
			
					console.log(responseText);
					setLanguageFromFilename(file['name']);
					
					var editor = ace.edit("editor");
					editor.$blockScrolling = Infinity;
					editor.setValue(atob(file['contents']));
					
					updateAceCode();

					updateTrial(responseText);						
									
				},
				error:			function(xhr, textStatus, errorThrown) {
					console.log(xhr);						
					alert(xhr['responseText']);
				}
			});
			
			return false;
		});

		$('#submissionButton').click( function() {			
			updateTrial("submit");			
		});
				
		function updateTrial(submitAfter){
					
			clearInterval(trialUpdateTimer);	
			
			// Create a FormData object
			var formData = new FormData();

			var language = $('#languageSelect option:selected').val();
			var main_class = $('#main_class_input').val();
			var package_name = $('#package_name_input').val();
			var show_description = !($("#markdown-collapser").text() == "Show Description");
			
			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;

			// TODO: create a loop through the editors

			$("#ACE").val(editor.getValue());

			var ACE = $('#ACE').val();	
			
			formData.append('problem_id', {{problem.id}});
			formData.append('language', language);
			formData.append('main_class', main_class);
			formData.append('package_name', package_name);
			formData.append('show_description', show_description);
			formData.append('ACE', ACE);

			if(getExtension($('#submissionUploadForm #file').val()) == "zip"){

				var file = $('#submissionUploadForm #file').prop('files')[0];
				if(file){
					formData.append('file', file);
				}
			}
			
			$.ajax({
				type: "POST",
				url: "{{path('modify_trial')}}",
				data: formData,
				processData: false,
				contentType: false,
				async: true,
				success: function(data){
					console.log(data);
					$('#trial-status').text("Code saved.");
					trialId = data['trial_id'];
					
					if(submitAfter == "submit"){
						submitSolution();
					}
				},
				error: function(data){
					//alert(data['responseText']);
					console.log(data['responseText']);
					$('#trial-status').text(data['responseText']);
					
					if(data['continue'] && submitAfter=="submit"){
						submitSolution();
					}
				}
			});						
		}
		
		function submitSolution(){
			
			// Create a FormData object
			var formData = new FormData();

			// validate that fields are filled in
			var language = $('#languageSelect option:selected').val();
			var languageText = $('#languageSelect option:selected').text();
			var main_class = $('#main_class_input').val();
			var package_name = $('#package_name_input').val();

			if(languageText == 'Java' && main_class == '') {
			
				setInvalid($('#main_class_input'));				
				return false;
				
			} else if(languageText != 'Java'){

				main_class = "";
				package_name = "";
			}
			setValid($('#main_class_input'));

			formData.append('trial_id', trialId);

			if(getExtension($('#submissionUploadForm #file').val()) == "zip"){

				var file = $('#submissionUploadForm #file').prop('files')[0];

				if(file){
					formData.append('file', file);
				}
			}

			$('#loading-container').show();
			$('#submissionButton').hide();
			
			$.ajax({
				type: "POST",
				url: "{{path('submit')}}",
				data: formData,
				processData: false,
				contentType: false,
				success: function(data){

					console.log(data);
					window.location = data["redirect_url"];
				},
				error: function(data){
					alert(data['responseText']);
					console.log(data['responseText']);
					
					$('#loading-container').hide();
					$('#submissionButton').show();
				}
			});
		}
				
	</script>

{% endblock %}
