{% block head %}
	<title>Gradel {% if problem != null %} | {{problem.assignment.name}} {% endif %}</title>
	<link rel="icon" type="image/x-icon" href="{{ asset('logo1.png') }}" />
{% endblock %}

{% block body %}

<body>
    {{ include('template/top-nav.html.twig') }}

	{# left panel with the problem links #}
	{{ include('template/problem-nav.html.twig') }}

    <section id="main">
		{{ include('template/path-nav.html.twig') }}

		{% if problem.assignment.problems|length == 0 %}

		{% else %}

			<div class="card">
				<h2 style="margin: 0px">{{problem.name}}</h2>
				<h3>
					{% if attempts_remaining < 0 %}
						Unlimited attempts allowed
					{% else %}
						Attempts left: {{attempts_remaining}}
					{% endif %}


					{% if best_submission != null %}
						<a href="{{path('problem_result', {'submission_id': best_submission.id})}}"> [Currently accepted submission] </a>
					{% else %}
						<a> [You have no submissions yet] </a>
					{% endif %}
				</h3>
				<div id="courseInfo" class="card-contents">
					<p>{{problemDescription|nl2br}}</p>

						{# the editor text area #}
						<div id="editor"></div>

						<br/>

						{# display the form or not #}
						{% set open = (problem.assignment.start_time|date('U') < "now"|date('U') and problem.assignment.cutoff_time|date('U') > "now"|date('U')) %}

						{% if usersectionrole.role.role_name == 'Takes' and open and attempts_remaining != 0%}

							{# ACE editor and file upload#}
							<form id="submissionUploadForm" action="{{path('get_contents')}}" method="post">
								<input type="file" name="file" id="file" value="Upload File">
							</form>

							{# Language selection and hidden field to submit ACE contents #}
							<div id="submissionForm">

								Language:
								<select id="languageSelect" name="language">
									{% for lang in languages %}
										{% if lang.name != "No Language Restriction" %}
											<option value={{lang.id}}>{{lang.name}}</option>
										{% endif %}
									{% endfor %}
								</select>
								<br>
								<div id="mainClassInput" style="display:none"><label for="main_class">Main Class: </label><input type="text" name="main_class" id="main_class_input"></div>
								<div id="packgNameInput" style="display:none"><label for="package_name">Package Name: </label><input type="text" name="package_name" id="package_name_input"></div>
								<br/>
								<input type="hidden" name="ACE" id="ACE">
								<div class="btn" id="submissionButton"> Submit </div>
							</div>

						{% elseif attempts_remaining == 0 %}
							You are out of attempts for this problem.
						{% elseif open %}
							You are not "Taking" this class, so you cannot submit a problem.
						{% else %}
							This problem is not currently open.
						{% endif %}

				</div>
        </div>

		{% endif %}

    </section>
</body>
{% endblock %}


{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('styles.css') }}" />
    <link rel="stylesheet" href="{{ asset('submit.css') }}" />

	<style>
		#submissionButton:hover {
			cursor:pointer;
		}

	</style>
{% endblock %}

{% block scripts %}
    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="{{ asset('src-noconflict/ace.js') }}" type="text/javascript" charset="utf-8"></script>
	<script src="{{ asset('js/validation.js') }}"></script>
	<script>
		element = $("#main_class_input");
		$('#submissionButton').on('click', function(){          
			if ($.trim(element.val())  === '') {	
			setInvalid(element);
			}
		});
		
		/* Mark fields as valid once the user changes them */
		element.on('input',function(e){
			setValid(element);
		});
</script>

	{# asynchronous file upload #}
	<script src="http://malsup.github.com/jquery.form.js"></script>

	<script>

		function getLanguage(filename){

			var filetypes = JSON.parse('{{ filetypes|json_encode|raw }}');
			var ext = getExtension(filename);

			return filetypes[ext];
		}

		function getExtension(filename){

			var ext = filename.substr(filename.lastIndexOf('.') + 1);

			return ext;
		}

		function getName(filename){

			var ext = getExtension(filename);

			var cls = filename.substr(filename.lastIndexOf('\\') + 1).replace("."+ext,"");

			return cls;
		}

		function setLanguageFromFilename(filename){

			var classname = getName(filename);
			var ext = getExtension(filename);
			var language = getLanguage(filename);

			if(!language){
				language = $('#languageSelect option:selected').text();
			}

			setLanguage(language);

			// set the main class
			document.getElementById('main_class_input').value = classname;

			// toggle the java inputs
			toggleJavaInputs(language == "Java", ext == "zip");
		}

		function setLanguage(language){

			// set the language selector
			var selectObject = document.getElementById('languageSelect');
			for(var i=0; i<selectObject.length; i++){
				if(selectObject.options[i].text == language){
					selectObject.selectedIndex = i;
					break;
				}
			}

			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;
			updateAceCode(editor.getValue(), language);

			// toggle the java inputs
			var ext = getExtension($('#submissionUploadForm #file').val());
			toggleJavaInputs(language == "Java", ext == "zip");
		}

		function toggleJavaInputs(state1, state2){

			if(!state1){
				document.getElementById('mainClassInput').style.display = 'none';
				document.getElementById('packgNameInput').style.display = 'none';
			} else if(state1 && !state2){
				document.getElementById('mainClassInput').style.display = 'block';
				document.getElementById('packgNameInput').style.display = 'none';
			} else{
				document.getElementById('mainClassInput').style.display = 'block';
				document.getElementById('packgNameInput').style.display = 'block';
			}
		}

		function updateAceCode(contents, language){

			var default_code = JSON.parse('{{ default_code|json_encode|replace({'\\':'\\\\'})|raw }}');
			var ace_modes = JSON.parse('{{ ace_modes|json_encode|raw }}');

			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;

			if(!language){
				language = $('#languageSelect option:selected').text();
			}

			editor.getSession().setMode("ace/mode/" + ace_modes[language]);

			if(contents != "") {
				editor.setValue(contents, -1);
			} else {
				// This sets the default code for the selected language.
				editor.setValue(default_code[language], -1);
			}
			$("#ACE").val(editor.getValue());
		}

	</script>

	<script>
		$(document).ready(function() {

			// make the language dropdown change affect the code
			$('#languageSelect').change( function(data) {

				var language = $('#languageSelect option:selected').text();

				setLanguage(language);
			});

			// submit the form if the file upload is changed
			$('#submissionUploadForm #file').change( function(data) {
				$('#submissionUploadForm').submit();
			});

			// overwrite the normal submit to call the ajaxsubmit
			$('#submissionUploadForm').submit(function() {
				$(this).ajaxSubmit();
			});

			// asynchronous script to handle the submission form upload
			$('#submissionUploadForm').ajaxForm(function(data) {
				//console.log(data);
				setLanguageFromFilename(data["file"]);
				updateAceCode(atob(data["contents"]), getLanguage(data["file"]));
			});

			$('#submissionButton').click( function() {

				// Create a FormData object
				var formData = new FormData();

				// validate that fields are filled in
				var language = $('#languageSelect option:selected').val();
				var languageText = $('#languageSelect option:selected').text();
				var main_class = $('#main_class_input').val();
				var package_name = $('#package_name_input').val();

				if(languageText == 'Java' && main_class == '') {
					return false;
				} else if(languageText != 'Java'){

					main_class = "";
					package_name = "";
				}

				var editor = ace.edit("editor");
				editor.$blockScrolling = Infinity;
				updateAceCode(editor.getValue(), languageText);

				var ACE = $('#ACE').val();

				formData.append('language', language);
				formData.append('main_class', main_class);
				formData.append('package_name', package_name);
				formData.append('ACE', ACE);


				if(getExtension($('#submissionUploadForm #file').val()) == "zip"){

					var file = $('#submissionUploadForm #file').prop('files')[0];

					if(file){
						formData.append('file', file);
					}
				}

				$.ajax({
					type: "POST",
					url: "{{path('submission_upload', {'problem_id': problem.id}) }}",
					data: formData,
					processData: false,
					contentType: false,
					success: function(data){

						console.log(data);
						window.location = data["redirect_url"];
					}
				});

			});



			// set default stuff for the ace editor
			var editor = ace.edit("editor");
			editor.$blockScrolling = Infinity;
			editor.setTheme("ace/theme/xcode");

			updateAceCode("", getLanguage("file.cpp"));
		});

	</script>

{% endblock %}
