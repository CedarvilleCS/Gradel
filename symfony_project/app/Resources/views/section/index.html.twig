{% block head %}

<title>Gradel{% if section != null %} | {{section.name}} {% endif %}</title>
<link rel="icon" type="image/x-icon" href="{{ asset('logo.png') }}" />
{% endblock %}


{% block body %}

<body>        
	{{ include('template/top-nav.html.twig') }}
	
	{{ include('template/assignment-nav.html.twig') }}

	{{ include('template/path-nav.html.twig') }}

	{# Main section #}
	<section id="main">
		<div class="card">
			<div class="btn-close" onclick="collapseCard('courseInfo')"><h2 style="margin: 0px">Due Soon<span style="float: right"><i class="fa fa-angle-down"></i></span></h2></div>
			<div id="courseInfo" class="card-contents">
			
			{% if future_assigs|length == 0 %}
			
				<h4 style="background: grey; color: white; padding: 5px">  No upcoming assignments </h4>
			
			{% else %}

				{% for assig in future_assigs %}
						
					{% set newDate = assig.end_time|date('m/d/Y') %}
							
					{% if newDate != oldDate %}
						<h4 style="background: grey; color: white; padding: 5px"> {{assig.end_time|date('l, F d')}} </h4>
					{% endif %}
							
					{% set oldDate = newDate %}
							
					<div style="margin-left: 20px"><small>{{asgn.section.name}}</small>
						<a href="{{path('assignment', {'sectionId':assig.section.id, 'assignmentId':assig.id})}}">
							<li>{{assig.name}} <small>(Due {{assig.end_time|date('\\a\\t  h:i:s A')}})</small></li>
						</a>
					</div>
						
				{% endfor %}
				
			{% endif %}
			
			</div>
		</div>

		{# Student Info Card #}
		{% if is_granted("ROLE_SUPER") or is_granted("ROLE_ADMIN") or grader.isTeaching(user, section) %}
		<div class="card">
			<div class="btn-close" onclick="collapseCard('studentInfo')"><h2 style="margin: 0px">Student Info<span style="float: right"><i class="fa fa-angle-down"></i></span></h2></div>
			<div id="studentInfo" class="card-contents">

				<div>
				{% if section_takers|length == 0 %}
				
					There are no students enrolled in this class
				
				{% else %}
				
					<table>
						<tr>
							<th style="text-align: left; border-bottom: 1px solid black; border-right: 1px solid black;">Student</th>
							{% for asgn in assignments %}
							
								<th style="border-bottom: 1px solid black">{{asgn.name}}</th>
							
							{% endfor %}
						</tr>
						
						{% for user in section_takers %}
														
							<tr> <th>{{user.getFirstName()}} {{user.getLastName()}}</th>
			  
								{% for asgn in assignments %}
									
									{% if grades[user.id][asgn.id]['num_correct_problems'] > 0 and grades[user.id][asgn.id]['num_correct_problems'] == grades[user.id][asgn.id]['num_problems'] %}
									
										<td style="color:green; font-size: 25px">{{grades[user.id][asgn.id]['num_correct_problems']}}/{{grades[user.id][asgn.id]['num_problems']}} 
										
										{% if grades[user.id][asgn.id]['num_extra_problems'] > 0 and grades[user.id][asgn.id]['num_extra_correct_problems'] == grades[user.id][asgn.id]['num_extra_problems'] %}
										{{grades[user.id][asgn.id]['num_correct_problems']}}/{{grades[user.id][asgn.id]['num_problems']}}										
										{% endif %}
										</td>
										
									{% elseif grades[user.id][asgn.id]['num_correct_problems'] != 0 %}
										<td style="color:orange; font-size: 25px"><i> {{grades[user.id][asgn.id]['num_correct_problems']}}/{{grades[user.id][asgn.id]['num_problems']}}</i></td>
								 {% else %} 
										<td style="color:red; font-size: 25px">{{grades[user.id][asgn.id]['num_correct_problems']}}/{{grades[user.id][asgn.id]['num_problems']}}</td>
								 {% endif %}
									
								{% endfor %}
							
						{% endfor %}
						
					</table>
					
					<br>
					
					<a id="download" download="grades.csv">
						<div class="btn">Download Grades</div>
					</a>
				
				{% endif %}
				
				</div>
			</div>
		</div>
		{% endif %}

		{# Assignment Grades Card #}
		{% if is_granted("ROLE_SUPER") or is_granted("ROLE_ADMIN") or grader.isTeaching(user, section) %}
		<div class="card">
			<div class="btn-close" onclick="collapseCard('studentInfoAssignment')"><h2 style="margin: 0px">Assignment Grades<span style="float: right"><i class="fa fa-angle-down"></i></span></h2></div>
			<div id="studentInfoAssignment" class="card-contents">

				
			</div>
		</div>
		{% endif %}
		
		{# Recent Submissions Card #}	
		<div class="card">
			<div class="btn-close" onclick="collapseCard('recentSubs')">
				<h2 style="margin: 0px">
					
					{% if not is_granted("ROLE_ADMIN") and not is_granted("ROLE_SUPER") and not grader.isTeaching(user, section) %}	
					Your 
					{% endif %}Recent Submissions					
					<span style="float: right"><i class="fa fa-angle-down"></i></span>
				</h2>
			</div>
			<div id="recentSubs" class="card-contents">
					
				<div>   
					<ul>
					{% if recent_submissions|length == 0 %}
						<li> No recent submissions </li>
					{% else %}
						
						{% for sub in recent_submissions %}
							{% if sub.isCorrect %}
								<div style="color: green">
							{% else %}
								
								<div style="color: red">
							{% endif %}
							
							<li><a href="{{path('problem_result', {'submission_id': sub.id})}}">
								<i>{{sub.problem.assignment.name}}:</i> {{sub.problem.name}} ({{sub.language.name}})
								
									{% if sub.team.users|length <= 1 or (not is_granted("ROLE_ADMIN") and not is_granted("ROLE_SUPER") and not grader.isTeaching(user, section)) %}
										{{sub.user.getFirstName}} {{sub.user.getLastName}} 
									{% else %}
										{
										{% for user in sub.team.users %}
											
											{{user.getLastName}}
											{% if not loop.last %}
											, 
											{% endif%}
										{% endfor %}
										}
									{% endif %}

								- {{sub.timestamp|date('M d  \\a\\t  h:i:s A')}}
							</a> </li>
						
							</div>
						{% endfor %}
						
					{% endif %}
					
					</ul>
				</div>
			</div>
		</div>
		
		
	</section>

	
</body>

{% endblock %}

{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('styles.css') }}" />
	<link rel="stylesheet" href="{{ asset('card.css') }}" />
	
	<link rel="stylesheet" href="{{ asset('font-awesome-4.7.0/css/font-awesome.min.css') }}">
{% endblock %}


{% block scripts %}
	<!-- JQuery -->
	<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
	<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
	<script src="{{ asset('js/cards.js') }}"></script>

	<script>

		$( document ).ready(function() {
			console.log( "ready!" );

			var counter = 0;

			var table 	= "<div>";
			{% if section_takers|length == 0 %}				
			table 		+=	"There are no students enrolled in this class";
			{% else %}
			{# For each assignment #}
			{% for asgn in assignments %}
				table 	+= "<h3>{{asgn.name}}</h3>"
						+	"<table>"
						+		"<tr>"
						+			"<th style='border-right: 1px solid black;'>&nbsp;</th>"
						+			'<th colspan="' + "{{ grades[user.id][asgn.id]['num_problems'] }}"+ '"' + 'style="text-align: center;">Testcases Passed / Total</th>'
						+		"</tr>"
						+		"<tr>"
						+			'<th style="text-align: left; border-bottom: 1px solid black; border-right: 1px solid black;">Student</th>'
						+			"{% for problem in asgn.problems %}"
						+				'<th style="text-align: left; border-bottom: 1px solid black;">{{ problem.name }}</th>'
						+			"{% endfor %}"
						+		"</tr>"
						+		"{% for user in section_takers %}"
						+			"<tr> <th>{{user.getFirstName()}} {{user.getLastName()}}</th>"	
						+			"{# Loop through problems #}"
						+			"{% for problem in asgn.problems %}"
						+				"{# number of testcases passed, number of test cases failed #}"
						+				"{# {{ grades|json_encode() }} #}"
						+				"{% if grades[user.id][asgn.id]['problem_grades'][problem.id]['passed_testcases'] == grades[user.id][asgn.id]['problem_grades'][problem.id]['total_testcases'] %}"
						+					'<td style="color:green; font-size: 20px">' + "{{ grades[user.id][asgn.id]['problem_grades'][problem.id]['passed_testcases'] }}  / {{ grades[user.id][asgn.id]['problem_grades'][problem.id]['total_testcases'] }}</td>"
						+				"{% elseif grades[user.id][asgn.id]['problem_grades'][problem.id]['passed_testcases'] != 0 %}"
						+					'<td style="color:orange; font-size: 20px">' + "{{ grades[user.id][asgn.id]['problem_grades'][problem.id]['passed_testcases'] }}  / {{ grades[user.id][asgn.id]['problem_grades'][problem.id]['total_testcases'] }}</td>"
						+				"{% else %}"
						+					'<td style="color:red; font-size: 20px">' + "{{ grades[user.id][asgn.id]['problem_grades'][problem.id]['passed_testcases'] }}  / {{ grades[user.id][asgn.id]['problem_grades'][problem.id]['total_testcases'] }}</td>"
						+				"{% endif %}"									
						+			"{% endfor %}"
						+		"{% endfor %}"
						+		"</table>"
						+		"<br><br>"	
						+		'<a id="download' + counter + '" download="grades.csv" onclick="' + "downloadAssgnGrades(" + counter + ", 'download" +  counter + "')" + '">'
						+			'<div class="btn">Download Grades</div>'
						+		"</a>";
						counter += 1;
			{% endfor %}
			table		+=	"<br>";
			{% endif %}
			table 		+= "</div>";


			// add it to the card
			$("#studentInfoAssignment").append(table);
		});
	

		{% if is_granted("ROLE_SUPER") or is_granted("ROLE_ADMIN") or grader.isTeaching(user, section) %}
		// Download CSV of Grades

		var textFile = null;

		// Create a text file from the given text
		function makeTextFile(text) {
			var data = new Blob([text], {type: 'text/plain'});
		
			// If we are replacing a previously generated file we need to
			// manually revoke the object URL to avoid memory leaks.
			if (textFile !== null) {
				window.URL.revokeObjectURL(textFile);
			}
		
			textFile = window.URL.createObjectURL(data);
		
			return textFile;
		};

		// Generate a CSV list of the grades
		function generateGradeCSVSection() {
			var gradesCSV = "Name, User, ";
			{% for asgn in assignments %}
				gradesCSV += "Problems Correct, Total Problems, Grade, ";
			{% endfor %}

			gradesCSV += "\n";

			{% for user in section_takers %}
				
				gradesCSV += '{{user.getFirstName()}} {{user.getLastName()}}, ';
				gradesCSV += '{{user }}, ';

				{% for asgn in assignments %}
									
					{# // {% if grades[user.id][asgn.id]['num_correct_problems'] > 0 and grades[user.id][asgn.id]['num_correct_problems'] == grades[user.id][asgn.id]['num_problems'] %} #}

					var correct = parseFloat("{{grades[user.id][asgn.id]['num_correct_problems']}}");
					var total = parseFloat("{{grades[user.id][asgn.id]['num_problems']}}");
					var percent = correct/total;

					gradesCSV += correct + ', ' + total + ', ' + percent + ', '; 
					// console.log("{{grades[user.id][asgn.id]['num_correct_problems']}}");

				{% endfor %}
				gradesCSV += "\n";
			{% endfor %}
			
			// console.log(gradesCSV);

			return gradesCSV;
		}


		// Generate a CSV list of the grades
		function generateGradeCSVAssignment(index) {

			var gradesCSV = [];
			var i = 0;
			
			{% for asgn in assignments %}

				gradesCSV[i] = " , ";

				{% for problem in asgn.problems %}
					gradesCSV[i] += "{{ problem.name }}" + ", , , ";
				{% endfor %}

				gradesCSV[i] += "\nUser, ";
				{% for problem in asgn.problems %}
					gradesCSV[i] += "Testcases Right, Total Testcases, Grade, ";
				{% endfor %}

				gradesCSV[i] += "\n";

				{% for user in section_takers %}
					//console.log("user");
					gradesCSV[i] += '{{user.getFirstName()}} {{user.getLastName()}}, ';

					{% for problem in asgn.problems %}
						var right = parseFloat("{{ grades[user.id][asgn.id]['problem_grades'][problem.id]['passed_testcases'] }}");
						var total = parseFloat("{{ grades[user.id][asgn.id]['problem_grades'][problem.id]['total_testcases'] }}");
						
						gradesCSV[i] += right + ", " + total + ", " + right/total + ", ";

					{% endfor %}

					gradesCSV[i] += "\n";
				{% endfor %}

				//console.log("grades at " + i + gradesCSV[i]);
				i += 1;
			{% endfor %}
			
			// for(var j = 0; j <= i; j++){
				//console.log(gradesCSV[j]);
			// }

			return gradesCSV[index];
		}


		// Download the CSV of grades when the download button is clicked
		var download = document.getElementById('download');	
		download.addEventListener('click', function () {
			var link = document.getElementById('download');
			link.href = makeTextFile(generateGradeCSVSection());
			link.style.display = 'block';
		}, false);

		// Download the CSV of grades when the downloadAssignment button is clicked
/*		var downloadAssignment = document.getElementById('downloadAssignment');	
		downloadAssignment.addEventListener('click', function () {
			var link = document.getElementById('downloadAssignment');
			link.href = makeTextFile(generateGradeCSVAssignment(1));
			link.style.display = 'block';
		}, false); */


		function downloadAssgnGrades(index, id) {
			
			console.log("index: " + index);
			console.log(generateGradeCSVAssignment(index));
			console.log("id: " + id);

			var link = document.getElementById(id);
			link.href = makeTextFile(generateGradeCSVAssignment(index));
			link.style.display = 'block';
		}

		{% endif %}


	</script>

{% endblock %}
